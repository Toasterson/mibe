#!/bin/bash
#
# This runs through and creates Steelapp models specified.
# Joyent 2013.

set -o errexit
set -o pipefail
#set -o nounset
#set -o xtrace

usage() {
	cat <<- EOF >&2

	Usage: $0 [-a | -d]

	Options:

        -a               Generate all stingray models.
        -d               Generate developer stingray model.

	EOF

	exit 1;
}

while getopts "ad" option; do
        case ${option} in
                a)
                        opt_a="true";
                        ;;
                d)
                        opt_d="true";
                        ;;
                *)
                        usage;
                        ;;
        esac
done

[[ ! ${opt_a} ]] && [[ ! ${opt_d} ]] && usage;

# Set mi_home and source mi_home/lib/mibe.inc if exists
mi_home=$(dirname $(cd ${0%/*} && pwd -P));
[[ -s "${mi_home}/lib/mibe.inc" ]] && source ${mi_home}/lib/mibe.inc || { echo "* ERROR - ${mi_home}/lib/mibe.inc not found, can't continue."; exit 1; }

get_reposdir;

# Create Stingray all models
if [[ ${opt_a} ]]; then
	source ${mi_reposdir}/mi-steelapp/manifest
	mi_imagenv="${name##*-}";
	stm_models=(1000M);
#	stm_models=(1000M-SAF 2000L 2000L-SAF 4000L 500L-10 500M-200 2000L-STX 2000L-SAF-STX 2000M-STX 2000M-SAF-STX);
#	stm_models=(1000H 1000M 1000M-SAF 2000L 2000L-SAF 4000L 500L-10 500M-200 2000L-STX 2000L-SAF-STX 2000M-STX 2000M-SAF-STX);
#	stm_models=(2000M-STX 2000M-SAF-STX);
	for i in ${stm_models[@]}; do
		# Modify manifest file to each Model
		gsed -i "/^name=/s/name=.*/name=\"steelapp-$i-${mi_imagenv}\"/" ${mi_reposdir}/mi-steelapp/manifest
		gsed -i "/^description=/s/description=.*/description=\"A SmartOS 64-bit image pre-configured and optimized as a SteelApp Traffic Manager 9.7 model $i.  The Stingray license will expire on Sat, 28 Feb 2015 and will be renewed automatically if your virtual machine is still active.\"/" ${mi_reposdir}/mi-steelapp/manifest
		gsed -i "/^STEELMOD=/s/STEELMOD=.*/STEELMOD=\"$i\"/" ${mi_reposdir}/mi-steelapp/customize
		if [[ "${i}" = "500L-10" ]]; then
			gsed -i "/^billingtags=/s/billingtags=.*/billingtags=\"stm-500L\"/" ${mi_reposdir}/mi-steelapp/manifest
		elif [[ "${i}" = "500M-200" ]]; then
			gsed -i "/^billingtags=/s/billingtags=.*/billingtags=\"stm-500M\"/" ${mi_reposdir}/mi-steelapp/manifest
		else
			gsed -i "/^billingtags=/s/billingtags=.*/billingtags=\"stm-$i\"/" ${mi_reposdir}/mi-steelapp/manifest
		fi

		# Create Stingray image
		mi_brepo="mi-steelapp"
		pfexec build_smartos b6761cf9-19b8-49b1-8d08-f986438f89a6 mi-steelapp
	done
fi

# Create Stingray Developer model
if [[ ${opt_d} ]]; then
	if [[ -f "${mi_reposdir}/mi-stingray/customize.developer" ]] && \
	[[ -f "${mi_reposdir}/mi-stingray/packages.developer" ]] && \
	[[ -f "${mi_reposdir}/mi-stingray/copy/var/zoneinit/includes/21-stingray.developer.sh" ]]; then
#		echo "* Creating Stingray Developer..";

		# Copy in customize, packages, and 21-stingray.sh
		cp ${mi_reposdir}/mi-stingray/customize.developer ${mi_reposdir}/mi-stingray/customize
		cp ${mi_reposdir}/mi-stingray/packages.developer ${mi_reposdir}/mi-stingray/packages
		mv ${mi_reposdir}/mi-stingray/copy/var/zoneinit/includes/21-stingray.developer.sh ${mi_reposdir}/mi-stingray/copy/var/zoneinit/includes/21-stingray.sh
		mv ${mi_reposdir}/mi-stingray/copy/var/zoneinit/includes/21-stingray.allmodels.sh ${mi_reposdir}/mi-stingray/21-stingray.allmodels.sh

		# Modify manifest file to Developer 
		gsed -i "/^name=/s/name=.*/name=\"stm-developer\"/" ${mi_reposdir}/mi-stingray/manifest
		gsed -i "/^description=/s/description=.*/description=\"Stingray Traffic Manager 9.3.0 Developer Edition\"/" ${mi_reposdir}/mi-stingray/manifest

		# Create Stingray image
		pfexec tpl -b base64-13.2.0 -z 19d393a3-bb5f-4b4c-ad5f-bcf74e698363 ${mi_reposdir}/mi-stingray

		# Move 21-stingray.sh back to original
		mv ${mi_reposdir}/mi-stingray/copy/var/zoneinit/includes/21-stingray.sh ${mi_reposdir}/mi-stingray/copy/var/zoneinit/includes/21-stingray.developer.sh
		mv ${mi_reposdir}/mi-stingray/21-stingray.allmodels.sh ${mi_reposdir}/mi-stingray/copy/var/zoneinit/includes/21-stingray.allmodels.sh
	else
		echo "* ERROR - customize.developer, packages.developer, and 21-steelapp.developer.sh must exist.";
		exit 1;
	fi
fi
